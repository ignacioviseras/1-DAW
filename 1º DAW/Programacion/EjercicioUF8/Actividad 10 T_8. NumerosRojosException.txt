Enunciado

Esta práctica consiste en la implementación de una clase de excepción llamada NumerosRojosException, que servirá para detectar en una clase llamada CuentaBancaria la situación en la que se saca de la cuenta más dinero del que disponemos, quedándonos en números rojos.

	-Debes crear un proyecto en Eclipse con el nombre EjercicioUF8-01 atendiendo a las especificaciones que se indican en este documento.
	-Empaquetarás el proyecto en un archivo .zip que entregarás a tu tutor junto con un documento en formato Word o PDF donde realizarás una exposición sobre lo que has ido realizando y pegarás las partes principales del código.

--Especificaciones

	-Partirás de una copia de las clases Movimiento y CuentaBancaria que aparecían en la unidad anterior (7.2 Colecciones). En este mismo documento, más abajo, tienes el código para que puedas copiarlo y luego pegarlo en tu proyecto.
	-Debes considerar como una excepción el hecho de realizar un movimiento que provoque números rojos. Si esto va a ocurrir, se producirá la excepción y el movimiento no debe llegar a realizarse. Para ello debes crear una clase de excepción que se llamará NumerosRojosException y será de tipo “comprobada”.
	-La siguiente clase Principal crea un objeto CuentaBancaria, le agrega un saldo inicial de 100 euros mediante un ingreso. Por último permite al usuario realizar una retirada de dinero solicitando por teclado la cantidad.

import java.util.Scanner;

public class Principal {
              public static void main(String args[]) throws NumerosRojosException {

                            Scanner lector = new Scanner(System.in);
                            System.out.println
                       ("Vamos a crear una cuenta y realizar el primer ingreso de 100 euros");
                           CuentaBancaria miCuenta = new CuentaBancaria
                           (38143, "Amelia González");
                           miCuenta.agregarMovimiento("Ingreso inicial", 100);
                           System.out.println("Cuánto dinero deseas retirar: ");
                           int dinero;
                           dinero = Integer.parseInt(lector.nextLine());
                           miCuenta.agregarMovimiento("Retirada de fondos", -dinero);
                           lector.close();
                           System.out.println(miCuenta);
                           System.out.println(miCuenta.listarMovimientos());
               }
}

Debes realizar los siguientes cambios a la clase Principal: utiliza un bloque try … catch para controlar las dos posibles excepciones que pueden producirse: NumberFormatException si el usuario introduce un valor incorrecto para la entrada del importe a retirar y NumerosRojosException si se producen números rojos.
 
	---Clases Movimiento y CuentaBancaria

import java.time.LocalDate;

public class Movimiento {
              private LocalDate fecha;
              private String concepto;
              private double cantidad;
              private double saldo;

              public Movimiento(String concepto, double cantidad, double saldo) {
                            this.concepto = concepto;
                            this.cantidad = cantidad;
                            this.saldo = saldo;
                            this.fecha = LocalDate.now();
             }

             @Override
             public String toString() {
             	return fecha + " Concepto=" + concepto + ", Cantidad=" + cantidad + ", Saldo=" + saldo;
             }
}

import java.util.ArrayList;

public class CuentaBancaria {
              private int numeroCuenta;
              private String cliente;
              private double saldo;
              private ArrayList<Movimiento> movimientos;

              public CuentaBancaria(int numeroCuenta, String cliente) {
                            this.numeroCuenta = numeroCuenta;
                            this.cliente = cliente;
                            this.saldo = 0;
                            this.movimientos = new ArrayList();
               }

               public void agregarMovimiento(String concepto, double cantidad) {
                             this.saldo = this.saldo + cantidad;
                             this.movimientos.add(new Movimiento(concepto, cantidad, saldo));
             }

             @Override
             public String toString() {
             	return "Número=" + numeroCuenta + ", Cliente=" + cliente + ", Saldo=" + saldo;
             }

             public String listarMovimientos() {
                           String listado = "";
                           for (Movimiento mov : this.movimientos) {
                                    listado = listado + mov.toString()+"\n";
                           }                          
                           return listado;
               }

}  